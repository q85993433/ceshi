zabbix 钉钉监控
py脚本

[root@SrtAly120 ~]# cat /etc/zabbix/zabbix_server.conf |grep ^AlertScriptsPath
AlertScriptsPath=/usr/lib/zabbix/alertscripts
#等于找zabbix_server.conf   里面加入AlertScriptsPath=/usr/lib/zabbix/alertscripts
进入到/usr/local/zabbix/alertscripts下编写dingding.py脚本(脚本中包含钉钉机器人的webhook值):
[root@SrtAly120 ~]# cd /usr/lib/zabbix/alertscripts

[root@SrtAly120 alertscripts]# cat dingding.py 
#脚本已测试  可以用
#!/usr/bin/env python
#coding:utf-8
#zabbix钉钉报警
import requests,json,sys,os,datetime
webhook="https://oapi.dingtalk.com/robot/send?access_token=8ea7abd3db4b49a9e898e911920d4899c526ae78f5794c977cfca8b6c0bjsdd"      #说明：这里改为自己创建的机器人的webhook的值
user=sys.argv[1]
text=sys.argv[3]
data={
    "msgtype": "text",
    "text": {
        "content": text
    },
    "at": {
        "atMobiles": [
            user
        ],
        "isAtAll": False
    }
}
headers = {'Content-Type': 'application/json'}
x=requests.post(url=webhook,data=json.dumps(data),headers=headers)
if os.path.exists("/var/log/zabbix/log/dingding.log"):
    f=open("/var/log/zabbix/log/dingding.log","a+")
else:
    f=open("/var/log/zabbix/log/dingding.log","w+")
f.write("\n"+"--"*30)
if x.json()["errcode"] == 0:
    f.write("\n"+str(datetime.datetime.now())+"    "+str(user)+"    "+"发送成功"+"\n"+str(text))
    f.close()
else:
    f.write("\n"+str(datetime.datetime.now()) + "    " + str(user) + "    " + "发送失败" + "\n" + str(text))
    f.close()

赋予脚本执行权限
[root@SrtAly120 alertscripts]# chmod +x dingding.py
创建上面脚本中的日志路径
[root@SrtAly120 alertscripts]# mkdir /var/log/zabbix/log/
[root@SrtAly120 alertscripts]# touch /var/log/zabbix/log/dingding.log 
[root@SrtAly120 alertscripts]# chown zabbix.zabbix /var/log/zabbix/log/dingding.log

手动测试脚本是否可以正常发送消息
这个条文档记录的测试信息,忽略
[root@SrtAly120 alertscripts]# ./dingding.py test gaojing "测试下"


创建上面脚本中的日志路径:
[root@zabbix01 monitor_scripts]# touch /usr/local/zabbix/logs/dingding.log
[root@zabbix01 monitor_scripts]# chown zabbix.zabbix dingding.py
[root@zabbix01 monitor_scripts]# chmod 755 dingding.py
[root@zabbix01 monitor_scripts]# chown zabbix.zabbix /usr/local/zabbix/logs/dingding.log


注意:该脚本要求至少python2.6.6版本,且具有requests模块.
 
否则会报错:
Traceback (most recent call last):
  File "./dingding.py", line 4, in <module>
    import requests,json,sys,os,datetime
ImportError: No module named requests
 
 
解决办法:
[root@zabbix01 monitor_scripts]# yum -y install epel-release
[root@zabbix01 monitor_scripts]# sudo yum install python-pip
[root@zabbix01 monitor_scripts]# sudo pip -v
[root@zabbix01 monitor_scripts]# sudo pip install requests



#脚本参数添加3个：
{ALERT.SENDTO}
{ALERT.SUBJECT}
{ALERT.MESSAGE}



